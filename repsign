#! /bin/bash
#
#  repsign - 2018-05-06, 2020-09-29
#
#  Replaces "?" with "_" in all file names in the current directory.
#
#  Bernd Storck, https://www.facebook.com/BStLinux/
#
#  Version 1.2.0 with thanks to Dennis Tecker, who has checked my former code.

# Data for progams self description:
SCRIPTNAME="$(basename "$0")"
VERSION="1.2.2"

# Default values:
DIR="."
OLDSIGN="?"
NEWSIGN="_"

function hilfe_seite {
cat << _EOT_

 $SCRIPTNAME $VERSION

 AUFRUFVARIANTEN:

    1. $SCRIPTNAME
    2. $SCRIPTNAME <ein_Zeichen>
    3. $SCRIPTNAME <Zeichenfolge> <andere_Zeichenfolge>
    4. $SCRIPTNAME <Pfad> <Zeichenfolge> <andere_Zeichenfolge>
    5. $SCRIPTNAME --hilf

 1. Das Programm ersetzt standardmäßig in den Namen aller Dateien des
    aktuellen Verzeichnisses alle Fragezeichen durch einen Unterstrich.

 2. Wird $SCRIPTNAME mit genau einem einzigem Parameter aufgerufen, mit der
    Angabe eines Zeichens, dann ersetzt $SCRIPTNAME dieses Zeichen durch einen
    Unterstrich.

 3. Mit zwei Parametern kann man bestimmen, welches Zeichen durch welches
    andere Zeichen ersetzt wird.

 4. Bei drei Aufrufparametern bedeutet der erste das Verzeichnis, in dem
    Dateinamen verändert werden sollen, der zweite, welches Zeichen
    ersetzt werden soll, und der dritte, welches andere Zeichen stattdessen
    eingefügt werden soll.

_EOT_
exit 0
}

function help_page {
cat << _EOT_

 $SCRIPTNAME $VERSION

 CALLS:

     1. $SCRIPTNAME
     2. $SCRIPTNAME <one_character>
     3. $SCRIPTNAME <string> <another_string>
     4. $SCRIPTNAME <path> <string> <another_string>
     5. $SCRIPTNAME -h|--help

 1. By default, the program replaces all wuestion marks with an under-
    score in all file names in the current directory.

 2. If $SCRIPTNAME is called with exactly one parameter, one single
    character, it will replace that character with an underscore.

 3. With two parameters you can decide, which string should be replaced
    with which other text string.

 4. If you are using three parameters, then the first is the directory,
    in which should be changed, the second says, which string should
    be replaced, and the third says, which other string should be
    inserted instead.

_EOT_
exit 0
}


function mask_signs {
	REPLSIGN="${OLDSIGN//\?/\\\?}"
	REPLSIGN="${REPLSIGN//\*/\\\*}"
}


function check_directory_existence {
	if [ ! -d "$DIR" ]; then
		echo "Error: Could not find a directory \"$DIR\"." 2> /dev/stderr
		echo -e "\nPondering this point against my passionately fullfilled mission to rename files, I decided -- I decided not to rename files in a non-existing directory. I'm really sorry." 2> /dev/stderr
		exit 1
	fi
}


if [ $# -eq 3 ]; then
	DIR="$1"
	check_directory_existence
	OLDSIGN="$2"
	NEWSIGN="$3"
elif [ $# -eq 2 ]; then
	OLDSIGN="$1"
	NEWSIGN="$2"
elif [ -n "$1" ]; then
	case "$1" in
        --hilf|--hilfe|-hilf|-hilfe)  # Calls German help regardless of system settings for language.
            hilfe_seite
            ;;
        --help|-h|-help)
            if [ "${LANG::2}" == "de" ]; then
                hilfe_seite
            else
                help_page
            fi
            ;;
        *)
           OLDSIGN="$1";;
	esac
else
        if [ "${LANG::2}" = "de" ]; then
		ASK="Sollen Fragezeichen in den Dateinamen durch einen Unterstrich ersetzt werden? [j|n]: "
		EXITMSG="Abbruch durch den Anwender."
	else
		ASK="Replace all question marks in file names with an underscore? [y|n]: "
		EXITMSG="Canceled by user."
	fi
	while : ;
	do
		read -p "$ASK"
		case "$REPLY" in
			j|J|y|Y)
				break
				;;
			n|N)
				echo "$EXITMSG"
				sleep 1
				hilfe
				;;
		esac
	done

fi


( cd "$DIR"; for OLDNAME in *;
do
	[[ -f "$OLDNAME" ]] || continue  # If no normal file, then do not manipulate it.
        if grep -Fcqs "$OLDSIGN" <<< "$OLDNAME"; then
		if grep -cqs "[*?]" <<< "$OLDSIGN"; then
			mask_signs
		else
			REPLSIGN="$OLDSIGN"
		fi
                NEWNAME=${OLDNAME//$REPLSIGN/$NEWSIGN}
                if [ ${#NEWNAME} -lt 1 ]; then
                	echo "Error: Can not replace file name \"$OLDNAME\" by \"$NEWNAME\"." > /dev/stderr
                	continue  # File name of only one sign can not be replaced by nothing.
                fi
               	mv -iv "$OLDNAME" "$NEWNAME"
        fi
done )
